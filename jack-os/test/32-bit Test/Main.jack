class Main {
  static Array masks_, pows_, buf_;
  static int INT_MIN, INT_MAX, HALF_INT_MAX;

  function void init() {
    var int i, mask;
    let masks_ = Array.new(32);
    let pows_ = Array.new(32);
    let i = 0;
    let mask = 1;
    while (i < 32) {
      let masks_[i] = mask;
      let mask = mask + mask;
      let i = i + 1;
    }
    let buf_ = Array.new(11);
    let INT_MIN = -1073741824;
    let INT_MIN = INT_MIN + INT_MIN;
    let INT_MAX = 2147483647;
    let HALF_INT_MAX = 1073741823;
    return;
  }

  function void printBinary(int x) {
    var int i, mask;
    let i = 0;
    let mask = 1;
    while (i < 32) {
      if ((x & mask) = 0) {
        let buf_[i] = 48;
      } else {
        let buf_[i] = 49;
      }
      let i = i + 1;
      let mask = mask + mask;
    }
    let i = 31;
    while (i > -1) {
      do Output.printChar(buf_[i]);
      let i = i - 1;
    }
    return;
  }

  function void main() {
    var int x;

    do Output.printInt(Main.mult(17, 17));
    do Output.println();

    let x = -1073741824;
    let x = x + x;
    // let x = -x;
    // do Main.init();
    // do Main.printInt(x);
    do Output.printInt(x);
    return;
  }

  function void printInt(int x) {
    var int i, t;
    if (x < 0) {
      do Output.printChar(45);
      let x = -x;
    }

    // DEBUG
    do Main.printBinary(x);
    do Output.println();

    let i = 0;
    while (~(x = 0)) {
      let t = Main.div(x, 10);
      let buf_[i] = x - Main.mult(t, 10) + 48;

      // DEBUG
      do Main.printBinary(buf_[i]);
      do Output.println();

      let i = i + 1;
      let x = t;
    }

    // DEBUG
    do Output.println();

    let i = i - 1;
    while (i > -1) {
      do Output.printChar(buf_[i]); // For some reason i can't add 48 here
      let i = i - 1;
    }
    return;
  }

  function int mult(int x, int y) {
    var bool neg;
    var int ret, i;

    let neg = false;
    if (x < 0) {
      let x = -x;
      let neg = ~neg;
    }
    if (y < 0) {
      let y = -y;
      let neg = ~neg;
    }

    let ret = 0;
    let i = 1;
    while (i > 0) {
      if (~((x & i) = 0)) {
        let ret = ret + y;
      }
      let i = i + i;
      let y = y + y;
    }
    if (neg) {
      return -ret;
    }
    return ret;
  }

  function int div(int x, int y) {
    var bool neg, check, cont;
    var int ret, i;

    let neg = false;
    let check = false;
    if (x < 0) {
      let x = -x;
      let neg = ~neg;
    }
    if (y < 0) {
      let y = -y;
      let neg = ~neg;
    }

    if (y = INT_MIN) {
      if (x = INT_MIN) {
        return 1;
      }
      return 0;
    }
    if (x = INT_MIN) {
      if (y = 1) {
        return x;
      }
      let x = INT_MAX;
      let check = true;
    }

    let ret = y;
    let i = 0;
    let cont = true;
    while ((i < 31) & cont) {
      let pows_[i] = ret;
      let i = i + 1;
      if (ret > HALF_INT_MAX) {
        let cont = false;
      }
      let ret = ret + ret;
    }

    let ret = 0;
    let i = i - 1;
    while (i > -1) {
      if (~(x < pows_[i])) {
        let ret = ret | masks_[i];
        let x = x - pows_[i];
      }
      let i = i - 1;
    }

    if (check & (x + 1 = y)) {
      let ret = ret + 1;
    }

    if (neg) {
      return -ret;
    }
    return ret;
  }
}