function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 0
push static 1
add
push constant 14436
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 9
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5
call Sys.error 1
pop temp 0
push constant 0
return
label IF_FALSE0
push static 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 6
call Sys.error 1
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 0
push constant 1
add
pop local 0
push static 1
pop local 2
push constant 0
pop local 3
push constant 14437
pop local 5
push constant 0
not
pop local 4
label WHILE_EXP0
push local 2
push constant 0
eq
not
push local 4
and
not
if-goto WHILE_END0
push constant 0
push local 2
add
pop pointer 1
push that 0
push local 0
sub
pop local 1
push local 1
push constant 0
lt
not
push local 1
push local 5
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
pop local 5
push local 2
pop local 6
push local 3
pop local 7
push local 1
push constant 1
gt
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop local 4
label IF_FALSE3
label IF_FALSE2
push local 2
pop local 3
push constant 1
push local 2
add
pop pointer 1
push that 0
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 5
push constant 14437
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 6
call Sys.error 1
pop temp 0
push constant 0
return
label IF_FALSE4
push local 5
push constant 1
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
push local 6
add
push constant 0
push local 6
add
pop pointer 1
push that 0
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 6
push local 5
add
push constant 1
add
pop local 8
push constant 1
neg
push local 8
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END5
label IF_FALSE5
push local 7
push constant 0
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
push local 6
add
pop pointer 1
push that 0
pop static 1
goto IF_END6
label IF_FALSE6
push constant 0
push local 7
add
push constant 0
push local 6
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END6
push local 6
push constant 1
add
pop local 8
label IF_END5
push local 8
return
function Memory.deAlloc 0
push constant 0
push argument 0
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 1
sub
pop static 1
push constant 0
return
