function Screen.init 2
push constant 1
neg
pop static 0
push constant 16
call Array.new 1
pop static 1
push constant 16
call Array.new 1
pop static 2
push constant 0
pop local 0
push constant 1
pop local 1
label WHILE70
push local 0
push constant 16
lt
not
if-goto END_WHILE70
push local 1
push static 1
push local 0
add
pop pointer 1
pop that 0
push local 1
not
push static 2
push local 0
add
pop pointer 1
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE70
label END_WHILE70
push constant 16384
pop static 3
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE71
push local 0
push constant 8192
lt
not
if-goto END_WHILE71
push constant 0
push static 3
push local 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE71
label END_WHILE71
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 3
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
not
if-goto END_IF171
push constant 7
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF171
push argument 0
push constant 16
call Math.divide 2
pop local 0
push argument 0
push local 0
push constant 16
call Math.multiply 2
sub
pop local 1
push argument 1
push constant 32
call Math.multiply 2
push local 0
add
pop local 2
push static 0
not
if-goto ELSE172
push static 3
push local 2
add
pop pointer 1
push that 0
push static 1
push local 1
add
pop pointer 1
push that 0
or
push static 3
push local 2
add
pop pointer 1
pop that 0
goto END_IF172
label ELSE172
push static 3
push local 2
add
pop pointer 1
push that 0
push static 2
push local 1
add
pop pointer 1
push that 0
and
push static 3
push local 2
add
pop pointer 1
pop that 0
label END_IF172
push constant 0
return
function Screen.drawLine 8
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push constant 511
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push constant 255
gt
or
not
if-goto END_IF173
push constant 8
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF173
push argument 2
push argument 0
sub
pop local 1
push argument 3
push argument 1
sub
pop local 2
push constant 0
pop local 7
push argument 1
push argument 3
eq
not
if-goto END_IF174
push local 1
push constant 0
lt
not
if-goto END_IF175
push argument 0
pop local 0
push argument 2
pop argument 0
push local 0
pop argument 2
label END_IF175
push argument 0
push constant 16
call Math.divide 2
pop local 3
push argument 0
push local 3
push constant 16
call Math.multiply 2
sub
pop local 4
push argument 2
push constant 16
call Math.divide 2
pop local 5
push local 3
push local 5
eq
not
if-goto ELSE176
push argument 2
push local 5
push constant 16
call Math.multiply 2
sub
pop local 6
goto END_IF176
label ELSE176
push constant 16
pop local 6
label END_IF176
push argument 1
push constant 32
call Math.multiply 2
push local 3
add
pop local 0
label WHILE72
push local 4
push constant 0
eq
push local 4
push local 6
eq
or
not
not
if-goto END_WHILE72
push static 0
not
if-goto ELSE177
push static 3
push local 0
add
pop pointer 1
push that 0
push static 1
push local 4
add
pop pointer 1
push that 0
or
push static 3
push local 0
add
pop pointer 1
pop that 0
goto END_IF177
label ELSE177
push static 3
push local 0
add
pop pointer 1
push that 0
push static 2
push local 4
add
pop pointer 1
push that 0
and
push static 3
push local 0
add
pop pointer 1
pop that 0
label END_IF177
push local 4
push constant 1
add
pop local 4
goto WHILE72
label END_WHILE72
push local 3
push local 5
eq
not
if-goto END_IF178
push constant 0
return
label END_IF178
push local 4
push constant 16
eq
not
if-goto END_IF179
push local 3
push constant 1
add
pop local 3
push local 0
push constant 1
add
pop local 0
label END_IF179
push argument 2
push local 5
push constant 16
call Math.multiply 2
sub
pop local 6
label WHILE73
push local 3
push local 5
lt
not
if-goto END_WHILE73
push static 0
not
if-goto ELSE180
push constant 1
neg
push static 3
push local 0
add
pop pointer 1
pop that 0
goto END_IF180
label ELSE180
push constant 0
push static 3
push local 0
add
pop pointer 1
pop that 0
label END_IF180
push local 0
push constant 1
add
pop local 0
push local 3
push constant 1
add
pop local 3
goto WHILE73
label END_WHILE73
push constant 0
pop local 4
label WHILE74
push local 4
push local 6
gt
not
not
if-goto END_WHILE74
push static 0
not
if-goto ELSE181
push static 3
push local 0
add
pop pointer 1
push that 0
push static 1
push local 4
add
pop pointer 1
push that 0
or
push static 3
push local 0
add
pop pointer 1
pop that 0
goto END_IF181
label ELSE181
push static 3
push local 0
add
pop pointer 1
push that 0
push static 2
push local 4
add
pop pointer 1
push that 0
and
push static 3
push local 0
add
pop pointer 1
pop that 0
label END_IF181
push local 4
push constant 1
add
pop local 4
goto WHILE74
label END_WHILE74
push constant 0
return
label END_IF174
push argument 0
push argument 2
eq
not
if-goto END_IF182
push local 2
push constant 0
lt
not
if-goto END_IF183
push argument 1
pop local 0
push argument 3
pop argument 1
push local 0
pop argument 3
label END_IF183
push argument 0
push constant 16
call Math.divide 2
pop local 3
push argument 0
push local 3
push constant 16
call Math.multiply 2
sub
pop local 4
push argument 1
push constant 32
call Math.multiply 2
push local 3
add
pop local 0
push static 0
not
if-goto ELSE184
push static 1
push local 4
add
pop pointer 1
push that 0
pop local 5
label WHILE75
push argument 1
push argument 3
gt
not
not
if-goto END_WHILE75
push static 3
push local 0
add
pop pointer 1
push that 0
push local 5
or
push static 3
push local 0
add
pop pointer 1
pop that 0
push argument 1
push constant 1
add
pop argument 1
push local 0
push constant 32
add
pop local 0
goto WHILE75
label END_WHILE75
goto END_IF184
label ELSE184
push static 2
push local 4
add
pop pointer 1
push that 0
pop local 5
label WHILE76
push argument 1
push argument 3
gt
not
not
if-goto END_WHILE76
push static 3
push local 0
add
pop pointer 1
push that 0
push local 5
and
push static 3
push local 0
add
pop pointer 1
pop that 0
push argument 1
push constant 1
add
pop argument 1
push local 0
push constant 32
add
pop local 0
goto WHILE76
label END_WHILE76
label END_IF184
push constant 0
return
label END_IF182
push local 1
push constant 0
lt
not
if-goto END_IF185
push argument 2
pop argument 0
push argument 3
pop argument 1
push local 1
neg
pop local 1
push local 2
neg
pop local 2
label END_IF185
push constant 0
pop local 3
push constant 0
pop local 4
push constant 0
pop local 7
push local 2
push constant 0
gt
not
if-goto ELSE186
label WHILE77
push local 3
push local 1
gt
push local 4
push local 2
gt
or
not
not
if-goto END_WHILE77
push argument 0
push local 3
add
push argument 1
push local 4
add
call Screen.drawPixel 2
pop temp 0
push local 7
push constant 0
lt
not
if-goto ELSE187
push local 4
push constant 1
add
pop local 4
push local 7
push local 1
add
pop local 7
goto END_IF187
label ELSE187
push local 3
push constant 1
add
pop local 3
push local 7
push local 2
sub
pop local 7
label END_IF187
goto WHILE77
label END_WHILE77
goto END_IF186
label ELSE186
push local 2
neg
pop local 2
label WHILE78
push local 3
push local 1
gt
push local 4
push local 2
gt
or
not
not
if-goto END_WHILE78
push argument 0
push local 3
add
push argument 1
push local 4
add
call Screen.drawPixel 2
pop temp 0
push local 7
push constant 0
lt
not
if-goto ELSE188
push local 3
push constant 1
add
pop local 3
push local 7
push local 2
add
pop local 7
goto END_IF188
label ELSE188
push local 4
push constant 1
sub
pop local 4
push local 7
push local 1
sub
pop local 7
label END_IF188
goto WHILE78
label END_WHILE78
label END_IF186
push constant 0
return
function Screen.drawRectangle 2
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
push argument 2
push constant 0
lt
or
push argument 2
push constant 511
gt
or
push argument 3
push constant 0
lt
or
push argument 3
push constant 255
gt
or
not
if-goto END_IF189
push constant 9
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF189
push argument 2
push argument 0
sub
pop local 0
push local 0
push constant 0
lt
not
if-goto END_IF190
push local 0
neg
pop local 0
label END_IF190
push argument 3
push argument 1
sub
pop local 1
push local 1
push constant 0
lt
not
if-goto END_IF191
push local 1
neg
pop local 1
label END_IF191
push local 1
push local 1
add
pop local 1
push local 1
push local 1
add
pop local 1
push local 1
push local 1
add
pop local 1
push local 0
push local 1
gt
not
if-goto ELSE192
push argument 1
push argument 3
lt
not
if-goto ELSE193
push constant 1
pop local 1
push argument 3
push constant 1
add
pop argument 3
goto END_IF193
label ELSE193
push constant 1
neg
pop local 1
push argument 3
push constant 1
sub
pop argument 3
label END_IF193
label WHILE79
push argument 1
push argument 3
eq
not
not
if-goto END_WHILE79
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 1
push local 1
add
pop argument 1
goto WHILE79
label END_WHILE79
goto END_IF192
label ELSE192
push argument 0
push argument 2
lt
not
if-goto ELSE194
push constant 1
pop local 0
push argument 2
push constant 1
add
pop argument 2
goto END_IF194
label ELSE194
push constant 1
neg
pop local 0
push argument 2
push constant 1
sub
pop argument 2
label END_IF194
label WHILE80
push argument 0
push argument 2
eq
not
not
if-goto END_WHILE80
push argument 0
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
push argument 0
push local 0
add
pop argument 0
goto WHILE80
label END_WHILE80
label END_IF192
push constant 0
return
function Screen.drawCircle 3
push argument 0
push constant 0
lt
push argument 0
push constant 511
gt
or
push argument 1
push constant 0
lt
or
push argument 1
push constant 255
gt
or
not
if-goto END_IF195
push constant 12
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF195
push argument 2
push constant 0
lt
push argument 2
push constant 181
gt
or
not
if-goto END_IF196
push constant 13
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF196
push argument 2
push constant 0
eq
not
if-goto END_IF197
push constant 0
return
label END_IF197
push argument 2
pop local 0
push constant 0
pop local 1
push constant 1
push argument 2
sub
pop local 2
push argument 0
push local 0
sub
push argument 1
push local 1
sub
push argument 0
push local 0
add
push argument 1
push local 1
sub
call Screen.drawLine 4
pop temp 0
push argument 0
push local 0
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
label WHILE81
push local 0
push local 1
gt
not
if-goto END_WHILE81
push local 1
push constant 1
add
pop local 1
push local 2
push constant 0
gt
not
if-goto ELSE198
push local 0
push constant 1
sub
pop local 0
push local 2
push local 1
add
push local 1
add
push local 0
sub
push local 0
sub
push constant 1
add
pop local 2
goto END_IF198
label ELSE198
push local 2
push local 1
add
push local 1
add
push constant 1
add
pop local 2
label END_IF198
push argument 0
push local 0
sub
push argument 1
push local 1
sub
push argument 0
push local 0
add
push argument 1
push local 1
sub
call Screen.drawLine 4
pop temp 0
push argument 0
push local 0
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push argument 0
push local 1
sub
push argument 1
push local 0
sub
push argument 0
push local 1
add
push argument 1
push local 0
sub
call Screen.drawLine 4
pop temp 0
push argument 0
push local 1
sub
push argument 1
push local 0
add
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawLine 4
pop temp 0
goto WHILE81
label END_WHILE81
push constant 0
return
