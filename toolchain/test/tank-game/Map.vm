function Map.new 6
push constant 3
call Memory.alloc 1
pop pointer 0
call List.new 0
pop this 2
push constant 0
pop local 0
push constant 30
push constant 45
call Math.multiply 2
call Array.new 1
pop this 0
push argument 0
pop this 1
label WHILE18
push local 0
push constant 10
lt
not
if-goto END_WHILE18
push constant 0
pop local 1
label WHILE19
push local 1
push constant 15
lt
not
if-goto END_WHILE19
push constant 0
pop local 2
push argument 0
push local 0
push constant 15
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
pop local 4
push local 4
push constant 4
eq
call Cheat.get_all_soft 0
and
not
if-goto END_IF67
push constant 3
pop local 4
label END_IF67
label WHILE20
push local 2
push constant 3
lt
not
if-goto END_WHILE20
push local 4
push this 0
push local 0
push constant 135
call Math.multiply 2
push local 1
push constant 3
call Math.multiply 2
add
push local 2
add
add
pop pointer 1
pop that 0
push local 4
push this 0
push local 0
push constant 135
call Math.multiply 2
push local 1
push constant 3
call Math.multiply 2
add
push local 2
add
push constant 45
add
add
pop pointer 1
pop that 0
push local 4
push this 0
push local 0
push constant 135
call Math.multiply 2
push local 1
push constant 3
call Math.multiply 2
add
push local 2
add
push constant 90
add
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE20
label END_WHILE20
push local 4
push constant 1
eq
push local 4
push constant 2
eq
or
not
if-goto END_IF68
push argument 0
push local 0
push constant 15
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
push local 1
push local 0
call Rand.rand 0
push constant 3
and
call Tank.new 4
pop local 5
push this 2
push local 5
call List.insert 2
pop temp 0
label END_IF68
push local 1
push constant 1
add
pop local 1
goto WHILE19
label END_WHILE19
push local 0
push constant 1
add
pop local 0
goto WHILE18
label END_WHILE18
push this 1
push constant 127
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto END_IF69
push constant 20
pop local 2
label WHILE21
push local 2
push constant 25
lt
not
if-goto END_WHILE21
push constant 25
pop local 3
label WHILE22
push local 3
push constant 30
lt
not
if-goto END_WHILE22
push constant 5
push this 0
push local 2
push local 3
push constant 45
call Math.multiply 2
add
add
pop pointer 1
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE22
label END_WHILE22
push local 2
push constant 1
add
pop local 2
goto WHILE21
label END_WHILE21
push constant 18
pop local 2
label WHILE23
push local 2
push constant 27
lt
not
if-goto END_WHILE23
push constant 3
push this 0
push constant 23
push constant 45
call Math.multiply 2
push local 2
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push constant 24
push constant 45
call Math.multiply 2
push local 2
add
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE23
label END_WHILE23
push constant 25
pop local 2
label WHILE24
push local 2
push constant 30
lt
not
if-goto END_WHILE24
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 18
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 19
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 25
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 26
add
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE24
label END_WHILE24
label END_IF69
push pointer 0
return
function Map.debug_draw 3
push argument 0
pop pointer 0
call Album.get_soft 0
pop local 2
push constant 0
pop local 0
label WHILE25
push local 0
push constant 30
lt
not
if-goto END_WHILE25
push constant 0
pop local 1
label WHILE26
push local 1
push constant 45
lt
not
if-goto END_WHILE26
push this 0
push local 0
push constant 45
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
push constant 0
eq
not
not
if-goto END_IF70
push local 2
push local 1
push constant 8
call Math.multiply 2
push local 0
push constant 8
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF70
push local 1
push constant 1
add
pop local 1
goto WHILE26
label END_WHILE26
push local 0
push constant 1
add
pop local 0
goto WHILE25
label END_WHILE25
push constant 0
return
function Map._draw_item 6
push constant 1
call Album.get_tank 1
pop local 4
push constant 2
call Album.get_tank 1
pop local 5
call Album.get_soft 0
pop local 2
call Album.get_hard 0
pop local 3
push argument 2
push constant 0
eq
not
if-goto END_IF71
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push argument 1
push constant 24
call Math.multiply 2
push constant 23
add
push argument 0
push constant 24
call Math.multiply 2
push constant 23
add
call Image.clear 4
pop temp 0
label END_IF71
push argument 2
push constant 1
eq
not
if-goto END_IF72
push local 4
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF72
push argument 2
push constant 2
eq
not
if-goto END_IF73
push local 5
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF73
push argument 2
push constant 3
eq
not
if-goto END_IF74
push constant 0
pop local 0
label WHILE27
push local 0
push constant 24
lt
not
if-goto END_WHILE27
push constant 0
pop local 1
label WHILE28
push local 1
push constant 24
lt
not
if-goto END_WHILE28
push local 2
push argument 1
push constant 24
call Math.multiply 2
push local 0
add
push argument 0
push constant 24
call Math.multiply 2
push local 1
add
push constant 0
call Image.draw 4
pop temp 0
push local 1
push constant 8
add
pop local 1
goto WHILE28
label END_WHILE28
push local 0
push constant 8
add
pop local 0
goto WHILE27
label END_WHILE27
label END_IF74
push argument 2
push constant 4
eq
not
if-goto END_IF75
push local 3
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF75
push constant 0
return
function Map.draw 7
push argument 0
pop pointer 0
call Album.get_QB 0
pop local 5
call Album.get_soft 0
pop local 6
push constant 0
pop local 0
label WHILE29
push local 0
push constant 10
lt
not
if-goto END_WHILE29
push constant 0
pop local 1
label WHILE30
push local 1
push constant 15
lt
not
if-goto END_WHILE30
push this 1
push local 0
push constant 15
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
pop local 4
push local 0
push local 1
push local 4
call Map._draw_item 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE30
label END_WHILE30
push local 0
push constant 1
add
pop local 0
goto WHILE29
label END_WHILE29
push this 1
push constant 127
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto END_IF76
push local 5
push constant 160
push constant 200
push constant 0
call Image.draw 4
pop temp 0
push constant 0
pop local 2
label WHILE31
push local 2
push constant 9
lt
not
if-goto END_WHILE31
push local 6
push constant 144
push local 2
push constant 8
call Math.multiply 2
add
push constant 184
push constant 0
call Image.draw 4
pop temp 0
push local 6
push constant 144
push local 2
push constant 8
call Math.multiply 2
add
push constant 192
push constant 0
call Image.draw 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE31
label END_WHILE31
push constant 0
pop local 2
label WHILE32
push local 2
push constant 5
lt
not
if-goto END_WHILE32
push local 6
push constant 144
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 6
push constant 152
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE32
label END_WHILE32
push constant 0
pop local 2
label WHILE33
push local 2
push constant 5
lt
not
if-goto END_WHILE33
push local 6
push constant 200
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 6
push constant 208
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE33
label END_WHILE33
label END_IF76
push constant 0
return
function Map.check 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push argument 1
push constant 0
lt
push argument 2
push constant 0
lt
or
push argument 3
push constant 44
gt
or
push argument 4
push constant 29
gt
or
not
if-goto END_IF77
push constant 1
neg
pop local 2
label END_IF77
push argument 1
pop local 0
label WHILE34
push local 0
push argument 3
push constant 1
add
lt
not
if-goto END_WHILE34
push argument 2
pop local 1
label WHILE35
push local 1
push argument 4
push constant 1
add
lt
not
if-goto END_WHILE35
push local 2
push this 0
push local 1
push constant 45
call Math.multiply 2
push local 0
add
add
pop pointer 1
push that 0
push constant 0
eq
not
or
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE35
label END_WHILE35
push local 0
push constant 1
add
pop local 0
goto WHILE34
label END_WHILE34
push local 2
not
return
function Map.update 2
push argument 0
pop pointer 0
push argument 5
push constant 0
eq
not
if-goto END_IF78
push argument 1
push constant 8
call Math.multiply 2
push argument 2
push constant 8
call Math.multiply 2
push argument 3
push constant 8
call Math.multiply 2
push constant 7
add
push argument 4
push constant 8
call Math.multiply 2
push constant 7
add
call Image.clear 4
pop temp 0
label END_IF78
push argument 1
pop local 0
label WHILE36
push local 0
push argument 3
push constant 1
add
lt
not
if-goto END_WHILE36
push argument 2
pop local 1
label WHILE37
push local 1
push argument 4
push constant 1
add
lt
not
if-goto END_WHILE37
push argument 5
push this 0
push local 1
push constant 45
call Math.multiply 2
push local 0
add
add
pop pointer 1
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE37
label END_WHILE37
push local 0
push constant 1
add
pop local 0
goto WHILE36
label END_WHILE36
push constant 0
return
function Map.peek 0
push argument 0
pop pointer 0
push this 0
push argument 2
push constant 45
call Math.multiply 2
push argument 1
add
add
pop pointer 1
push that 0
return
function Map.get_tank_list 0
push argument 0
pop pointer 0
push this 2
return
function Map.destroy 0
push argument 0
pop pointer 0
push this 0
call Memory.deAlloc 1
pop temp 0
push this 1
call Memory.deAlloc 1
pop temp 0
push constant 0
return
