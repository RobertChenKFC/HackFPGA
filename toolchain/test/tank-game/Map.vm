function Map.new 6
push constant 3
call Memory.alloc 1
pop pointer 0
call List.new 0
pop this 2
push constant 0
pop local 0
push constant 30
push constant 45
call Math.multiply 2
call Array.new 1
pop this 0
push argument 0
pop this 1
label WHILE0
push local 0
push constant 10
lt
not
if-goto END_WHILE0
push constant 0
pop local 1
label WHILE1
push local 1
push constant 15
lt
not
if-goto END_WHILE1
push constant 0
pop local 2
push argument 0
push local 0
push constant 15
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
pop local 4
push local 4
push constant 4
eq
call Cheat.get_all_soft 0
and
not
if-goto END_IF0
push constant 3
pop local 4
label END_IF0
label WHILE2
push local 2
push constant 3
lt
not
if-goto END_WHILE2
push local 4
push this 0
push local 0
push constant 135
call Math.multiply 2
push local 1
push constant 3
call Math.multiply 2
add
push local 2
add
add
pop pointer 1
pop that 0
push local 4
push this 0
push local 0
push constant 135
call Math.multiply 2
push local 1
push constant 3
call Math.multiply 2
add
push local 2
add
push constant 45
add
add
pop pointer 1
pop that 0
push local 4
push this 0
push local 0
push constant 135
call Math.multiply 2
push local 1
push constant 3
call Math.multiply 2
add
push local 2
add
push constant 90
add
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE2
label END_WHILE2
push local 4
push constant 1
eq
push local 4
push constant 2
eq
or
not
if-goto END_IF1
push argument 0
push local 0
push constant 15
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
push local 1
push local 0
call Rand.rand 0
push constant 3
and
call Tank.new 4
pop local 5
push this 2
push local 5
call List.insert 2
pop temp 0
label END_IF1
push local 1
push constant 1
add
pop local 1
goto WHILE1
label END_WHILE1
push local 0
push constant 1
add
pop local 0
goto WHILE0
label END_WHILE0
push this 1
push constant 127
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto END_IF2
push constant 20
pop local 2
label WHILE3
push local 2
push constant 25
lt
not
if-goto END_WHILE3
push constant 25
pop local 3
label WHILE4
push local 3
push constant 30
lt
not
if-goto END_WHILE4
push constant 5
push this 0
push local 2
push local 3
push constant 45
call Math.multiply 2
add
add
pop pointer 1
pop that 0
push local 3
push constant 1
add
pop local 3
goto WHILE4
label END_WHILE4
push local 2
push constant 1
add
pop local 2
goto WHILE3
label END_WHILE3
push constant 18
pop local 2
label WHILE5
push local 2
push constant 27
lt
not
if-goto END_WHILE5
push constant 3
push this 0
push constant 23
push constant 45
call Math.multiply 2
push local 2
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push constant 24
push constant 45
call Math.multiply 2
push local 2
add
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE5
label END_WHILE5
push constant 25
pop local 2
label WHILE6
push local 2
push constant 30
lt
not
if-goto END_WHILE6
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 18
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 19
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 25
add
add
pop pointer 1
pop that 0
push constant 3
push this 0
push local 2
push constant 45
call Math.multiply 2
push constant 26
add
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto WHILE6
label END_WHILE6
label END_IF2
push pointer 0
return
function Map.debug_draw 3
push argument 0
pop pointer 0
call Album.get_soft 0
pop local 2
push constant 0
pop local 0
label WHILE7
push local 0
push constant 30
lt
not
if-goto END_WHILE7
push constant 0
pop local 1
label WHILE8
push local 1
push constant 45
lt
not
if-goto END_WHILE8
push this 0
push local 0
push constant 45
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
push constant 0
eq
not
not
if-goto END_IF3
push local 2
push local 1
push constant 8
call Math.multiply 2
push local 0
push constant 8
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF3
push local 1
push constant 1
add
pop local 1
goto WHILE8
label END_WHILE8
push local 0
push constant 1
add
pop local 0
goto WHILE7
label END_WHILE7
push constant 0
return
function Map._draw_item 6
push constant 1
call Album.get_tank 1
pop local 4
push constant 2
call Album.get_tank 1
pop local 5
call Album.get_soft 0
pop local 2
call Album.get_hard 0
pop local 3
push argument 2
push constant 0
eq
not
if-goto END_IF4
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push argument 1
push constant 24
call Math.multiply 2
push constant 23
add
push argument 0
push constant 24
call Math.multiply 2
push constant 23
add
call Image.clear 4
pop temp 0
label END_IF4
push argument 2
push constant 1
eq
not
if-goto END_IF5
push local 4
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF5
push argument 2
push constant 2
eq
not
if-goto END_IF6
push local 5
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF6
push argument 2
push constant 3
eq
not
if-goto END_IF7
push constant 0
pop local 0
label WHILE9
push local 0
push constant 24
lt
not
if-goto END_WHILE9
push constant 0
pop local 1
label WHILE10
push local 1
push constant 24
lt
not
if-goto END_WHILE10
push local 2
push argument 1
push constant 24
call Math.multiply 2
push local 0
add
push argument 0
push constant 24
call Math.multiply 2
push local 1
add
push constant 0
call Image.draw 4
pop temp 0
push local 1
push constant 8
add
pop local 1
goto WHILE10
label END_WHILE10
push local 0
push constant 8
add
pop local 0
goto WHILE9
label END_WHILE9
label END_IF7
push argument 2
push constant 4
eq
not
if-goto END_IF8
push local 3
push argument 1
push constant 24
call Math.multiply 2
push argument 0
push constant 24
call Math.multiply 2
push constant 0
call Image.draw 4
pop temp 0
label END_IF8
push constant 0
return
function Map.draw 7
push argument 0
pop pointer 0
call Album.get_QB 0
pop local 5
call Album.get_soft 0
pop local 6
push constant 0
pop local 0
label WHILE11
push local 0
push constant 10
lt
not
if-goto END_WHILE11
push constant 0
pop local 1
label WHILE12
push local 1
push constant 15
lt
not
if-goto END_WHILE12
push this 1
push local 0
push constant 15
call Math.multiply 2
push local 1
add
add
pop pointer 1
push that 0
pop local 4
push local 0
push local 1
push local 4
call Map._draw_item 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE12
label END_WHILE12
push local 0
push constant 1
add
pop local 0
goto WHILE11
label END_WHILE11
push this 1
push constant 127
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto END_IF9
push local 5
push constant 160
push constant 200
push constant 0
call Image.draw 4
pop temp 0
push constant 0
pop local 2
label WHILE13
push local 2
push constant 9
lt
not
if-goto END_WHILE13
push local 6
push constant 144
push local 2
push constant 8
call Math.multiply 2
add
push constant 184
push constant 0
call Image.draw 4
pop temp 0
push local 6
push constant 144
push local 2
push constant 8
call Math.multiply 2
add
push constant 192
push constant 0
call Image.draw 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE13
label END_WHILE13
push constant 0
pop local 2
label WHILE14
push local 2
push constant 5
lt
not
if-goto END_WHILE14
push local 6
push constant 144
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 6
push constant 152
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE14
label END_WHILE14
push constant 0
pop local 2
label WHILE15
push local 2
push constant 5
lt
not
if-goto END_WHILE15
push local 6
push constant 200
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 6
push constant 208
push constant 200
push local 2
push constant 8
call Math.multiply 2
add
push constant 0
call Image.draw 4
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE15
label END_WHILE15
label END_IF9
push constant 0
return
function Map.check 3
push argument 0
pop pointer 0
push constant 0
pop local 2
push argument 1
push constant 0
lt
push argument 2
push constant 0
lt
or
push argument 3
push constant 44
gt
or
push argument 4
push constant 29
gt
or
not
if-goto END_IF10
push constant 1
neg
pop local 2
label END_IF10
push argument 1
pop local 0
label WHILE16
push local 0
push argument 3
push constant 1
add
lt
not
if-goto END_WHILE16
push argument 2
pop local 1
label WHILE17
push local 1
push argument 4
push constant 1
add
lt
not
if-goto END_WHILE17
push local 2
push this 0
push local 1
push constant 45
call Math.multiply 2
push local 0
add
add
pop pointer 1
push that 0
push constant 0
eq
not
or
pop local 2
push local 1
push constant 1
add
pop local 1
goto WHILE17
label END_WHILE17
push local 0
push constant 1
add
pop local 0
goto WHILE16
label END_WHILE16
push local 2
not
return
function Map.update 2
push argument 0
pop pointer 0
push argument 5
push constant 0
eq
not
if-goto END_IF11
push argument 1
push constant 8
call Math.multiply 2
push argument 2
push constant 8
call Math.multiply 2
push argument 3
push constant 8
call Math.multiply 2
push constant 7
add
push argument 4
push constant 8
call Math.multiply 2
push constant 7
add
call Image.clear 4
pop temp 0
label END_IF11
push argument 1
pop local 0
label WHILE18
push local 0
push argument 3
push constant 1
add
lt
not
if-goto END_WHILE18
push argument 2
pop local 1
label WHILE19
push local 1
push argument 4
push constant 1
add
lt
not
if-goto END_WHILE19
push argument 5
push this 0
push local 1
push constant 45
call Math.multiply 2
push local 0
add
add
pop pointer 1
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE19
label END_WHILE19
push local 0
push constant 1
add
pop local 0
goto WHILE18
label END_WHILE18
push constant 0
return
function Map.peek 0
push argument 0
pop pointer 0
push this 0
push argument 2
push constant 45
call Math.multiply 2
push argument 1
add
add
pop pointer 1
push that 0
return
function Map.get_tank_list 0
push argument 0
pop pointer 0
push this 2
return
function Map.destroy 0
push argument 0
pop pointer 0
push this 0
call Memory.deAlloc 1
pop temp 0
push this 1
call Memory.deAlloc 1
pop temp 0
push constant 0
return
