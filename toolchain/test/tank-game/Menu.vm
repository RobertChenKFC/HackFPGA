function Menu.new 2
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push argument 1
pop this 3
push argument 2
pop this 4
push argument 4
pop this 6
push constant 0
pop this 1
push argument 3
pop this 0
call List.new 0
pop this 7
push constant 0
pop local 0
push constant 0
pop this 5
label WHILE0
push local 0
push this 4
lt
not
if-goto END_WHILE0
push this 0
push local 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call String.length 1
push this 5
gt
not
if-goto END_IF0
push local 1
call String.length 1
pop this 5
label END_IF0
push local 0
push constant 1
add
pop local 0
goto WHILE0
label END_WHILE0
push pointer 0
return
function Menu._xor 3
push constant 16384
push argument 0
push constant 352
call Math.multiply 2
add
push argument 1
push constant 2
call Math.divide 2
add
pop local 0
push constant 0
pop local 1
label WHILE1
push local 1
push constant 352
lt
not
if-goto END_WHILE1
push local 0
push local 1
add
call Memory.peek 1
pop local 2
push argument 1
push constant 1
and
push constant 0
eq
not
if-goto ELSE1
push constant 256
neg
push local 2
not
and
push constant 255
push local 2
and
or
pop local 2
goto END_IF1
label ELSE1
push constant 256
neg
push local 2
and
push constant 255
push local 2
not
and
or
pop local 2
label END_IF1
push local 0
push local 1
add
push local 2
not
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
pop local 1
goto WHILE1
label END_WHILE1
push constant 0
return
function Menu._draw_select 3
push argument 0
pop pointer 0
push this 0
push this 1
add
pop pointer 1
push that 0
pop local 0
push constant 0
pop local 1
label WHILE2
push local 1
push local 0
call String.length 1
lt
not
if-goto END_WHILE2
push this 2
push this 1
add
push this 1
add
push this 3
push local 1
add
call Menu._xor 2
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE2
label END_WHILE2
push constant 0
return
function Menu._input 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE3
push local 1
push constant 0
eq
not
if-goto END_WHILE3
call Keyboard.keyPressed 0
pop local 1
goto WHILE3
label END_WHILE3
label WHILE4
push local 1
push constant 0
eq
not
not
if-goto END_WHILE4
push local 1
pop local 0
call Keyboard.keyPressed 0
pop local 1
goto WHILE4
label END_WHILE4
push local 0
return
function Menu._reset_cheat 1
push argument 0
pop pointer 0
push this 7
call List.reset 1
pop temp 0
label WHILE5
push this 7
call List.end 1
not
not
if-goto END_WHILE5
push this 7
call List.get 1
pop local 0
push local 0
call CheatCode.reset 1
pop temp 0
push this 7
call List.next 1
pop temp 0
goto WHILE5
label END_WHILE5
push constant 0
return
function Menu._check_cheat 2
push argument 0
pop pointer 0
push constant 0
pop local 1
push this 7
call List.reset 1
pop temp 0
label WHILE6
push this 7
call List.end 1
not
not
if-goto END_WHILE6
push this 7
call List.get 1
pop local 0
push local 0
push argument 1
call CheatCode.complete 2
not
if-goto END_IF2
push this 4
push local 1
add
return
label END_IF2
push local 1
push constant 1
add
pop local 1
push this 7
call List.next 1
pop temp 0
goto WHILE6
label END_WHILE6
push constant 2
neg
return
function Menu.run 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE7
push local 0
push this 4
lt
not
if-goto END_WHILE7
push this 2
push local 0
push local 0
add
add
push this 3
call Output.moveCursor 2
pop temp 0
push this 0
push local 0
add
pop pointer 1
push that 0
call Output.printString 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE7
label END_WHILE7
push pointer 0
call Menu._reset_cheat 1
pop temp 0
push pointer 0
push constant 1
call Menu._draw_select 2
pop temp 0
push constant 2
neg
pop local 2
label WHILE8
push local 2
push constant 2
neg
eq
not
if-goto END_WHILE8
push pointer 0
call Menu._input 1
pop local 1
push pointer 0
push local 1
call Menu._check_cheat 2
pop local 2
push local 2
push constant 2
neg
eq
not
if-goto END_IF3
push local 1
push constant 131
eq
push this 1
push constant 0
gt
and
not
if-goto END_IF4
push pointer 0
push constant 0
call Menu._draw_select 2
pop temp 0
push this 1
push constant 1
sub
pop this 1
push pointer 0
push constant 1
call Menu._draw_select 2
pop temp 0
label END_IF4
push local 1
push constant 133
eq
push this 1
push constant 1
add
push this 4
lt
and
not
if-goto END_IF5
push pointer 0
push constant 0
call Menu._draw_select 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push pointer 0
push constant 1
call Menu._draw_select 2
pop temp 0
label END_IF5
push local 1
push constant 32
eq
not
if-goto END_IF6
push this 1
pop local 2
label END_IF6
push local 1
push constant 81
eq
not
if-goto END_IF7
push constant 1
neg
pop local 2
label END_IF7
label END_IF3
goto WHILE8
label END_WHILE8
push pointer 0
push constant 0
call Menu._draw_select 2
pop temp 0
push this 6
not
if-goto END_IF8
push constant 0
call Screen.setColor 1
pop temp 0
push this 3
push constant 8
call Math.multiply 2
push this 2
push constant 11
call Math.multiply 2
push this 3
push this 5
add
push constant 8
call Math.multiply 2
push constant 1
sub
push this 2
push this 4
add
push this 4
add
push constant 11
call Math.multiply 2
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
label END_IF8
push local 2
return
function Menu.add_cheat 0
push argument 0
pop pointer 0
push this 7
push argument 1
call CheatCode.new 1
call List.insert 2
pop temp 0
push constant 0
return
