function Image.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function Image.set_origin 0
push argument 0
pop static 0
push argument 1
pop static 1
push constant 0
return
function Image.clear 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 0
push static 0
add
push argument 1
push static 1
add
push argument 2
push static 0
add
push argument 3
push static 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Image.fill 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push argument 0
push static 0
add
push argument 1
push static 1
add
push argument 2
push static 0
add
push argument 3
push static 1
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Image._turn_x 1
push argument 0
pop pointer 0
push argument 3
push constant 0
eq
not
if-goto ELSE40
push argument 1
pop local 0
goto END_IF40
label ELSE40
push argument 3
push constant 1
eq
not
if-goto ELSE41
push this 1
push argument 2
sub
push constant 1
sub
pop local 0
goto END_IF41
label ELSE41
push argument 3
push constant 2
eq
not
if-goto ELSE42
push this 0
push argument 1
sub
push constant 1
sub
pop local 0
goto END_IF42
label ELSE42
push argument 2
pop local 0
label END_IF42
label END_IF41
label END_IF40
push local 0
return
function Image._turn_y 1
push argument 0
pop pointer 0
push argument 3
push constant 0
eq
not
if-goto ELSE43
push argument 2
pop local 0
goto END_IF43
label ELSE43
push argument 3
push constant 1
eq
not
if-goto ELSE44
push argument 1
pop local 0
goto END_IF44
label ELSE44
push argument 3
push constant 2
eq
not
if-goto ELSE45
push this 1
push argument 2
sub
push constant 1
sub
pop local 0
goto END_IF45
label ELSE45
push this 0
push argument 1
sub
push constant 1
sub
pop local 0
label END_IF45
label END_IF44
label END_IF43
push local 0
return
function Image.draw 7
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 3
push constant 1
pop local 2
label WHILE20
push local 0
push this 1
lt
not
if-goto END_WHILE20
push constant 0
pop local 1
label WHILE21
push local 1
push this 0
lt
not
if-goto END_WHILE21
push local 2
push this 2
push local 3
add
pop pointer 1
push that 0
and
push constant 0
eq
not
call Screen.setColor 1
pop temp 0
push argument 1
push static 0
add
push pointer 0
push local 1
push local 0
push argument 3
call Image._turn_x 4
add
pop local 5
push argument 2
push static 1
add
push pointer 0
push local 1
push local 0
push argument 3
call Image._turn_y 4
add
pop local 6
push local 5
push constant 512
lt
push local 6
push constant 256
lt
and
not
if-goto END_IF46
push local 5
push local 6
call Screen.drawPixel 2
pop temp 0
label END_IF46
push local 2
push constant 0
lt
not
if-goto ELSE47
push constant 1
pop local 2
push local 3
push constant 1
add
pop local 3
goto END_IF47
label ELSE47
push local 2
push local 2
add
pop local 2
label END_IF47
push local 1
push constant 1
add
pop local 1
goto WHILE21
label END_WHILE21
push local 0
push constant 1
add
pop local 0
goto WHILE20
label END_WHILE20
push constant 0
return
