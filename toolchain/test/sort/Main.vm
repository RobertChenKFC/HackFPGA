function Main.main 2
push constant 256
call Array.new 1
pop static 0
push constant 512
call Array.new 1
pop static 1
call Main.srand 0
pop temp 0
push constant 1
neg
pop local 1
label WHILE0
push local 1
not
if-goto END_WHILE0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 49
eq
not
if-goto END_IF0
call Main.init 0
pop temp 0
call Main.randomize 0
pop temp 0
call Main.bubbleSort 0
pop temp 0
label END_IF0
push local 0
push constant 50
eq
not
if-goto END_IF1
call Main.init 0
pop temp 0
call Main.randomize 0
pop temp 0
call Main.selectionSort 0
pop temp 0
label END_IF1
push local 0
push constant 51
eq
not
if-goto END_IF2
call Main.init 0
pop temp 0
call Main.randomize 0
pop temp 0
call Main.mergeSort 0
pop temp 0
label END_IF2
push local 0
push constant 52
eq
not
if-goto END_IF3
call Main.init 0
pop temp 0
call Main.randomize 0
pop temp 0
call Main.quickSort 0
pop temp 0
label END_IF3
push local 0
push constant 53
eq
not
if-goto END_IF4
call Main.init 0
pop temp 0
call Main.randomize 0
pop temp 0
call Main.heapSort 0
pop temp 0
label END_IF4
push local 0
push constant 54
eq
not
if-goto END_IF5
call Main.init 0
pop temp 0
call Main.randomize 0
pop temp 0
call Main.radixSort 0
pop temp 0
label END_IF5
push local 0
push constant 81
eq
not
if-goto END_IF6
push constant 0
pop local 1
label END_IF6
goto WHILE0
label END_WHILE0
push static 0
call Array.dispose 1
pop temp 0
push static 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Main.init 2
push constant 0
pop local 0
push constant 255
pop local 1
label WHILE1
push local 0
push constant 255
lt
not
if-goto END_WHILE1
push local 1
push static 0
push local 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
push local 1
push constant 1
sub
pop local 1
goto WHILE1
label END_WHILE1
push constant 0
return
function Main.randomize 4
push constant 0
pop local 0
label WHILE2
push local 0
push constant 1024
lt
not
if-goto END_WHILE2
call Main.rand 0
push constant 255
call Main.mod 2
pop local 1
call Main.rand 0
push constant 255
call Main.mod 2
pop local 2
push static 0
push local 1
add
pop pointer 1
push that 0
pop local 3
push static 0
push local 2
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 3
push static 0
push local 2
add
pop pointer 1
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE2
label END_WHILE2
push constant 0
return
function Main.bubbleSort 4
call Main.draw 0
pop temp 0
push constant 255
pop local 0
push constant 0
pop static 3
label WHILE3
push local 0
push constant 0
lt
not
not
if-goto END_WHILE3
push constant 0
pop local 1
label WHILE4
push local 1
push local 0
lt
not
if-goto END_WHILE4
push local 1
push constant 1
add
pop local 2
push static 0
push local 1
add
pop pointer 1
push that 0
push static 0
push local 2
add
pop pointer 1
push that 0
lt
not
if-goto END_IF7
push static 0
push local 1
add
pop pointer 1
push that 0
pop local 3
push static 0
push local 2
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 3
push static 0
push local 2
add
pop pointer 1
pop that 0
label END_IF7
push static 3
push constant 500
eq
not
if-goto END_IF8
call Main.draw 0
pop temp 0
push constant 0
pop static 3
label END_IF8
push local 1
push constant 1
add
pop local 1
push static 3
push constant 1
add
pop static 3
goto WHILE4
label END_WHILE4
push local 0
push constant 1
sub
pop local 0
goto WHILE3
label END_WHILE3
call Main.draw 0
pop temp 0
push constant 0
return
function Main.selectionSort 5
call Main.draw 0
pop temp 0
push constant 255
pop local 0
push constant 0
pop static 3
label WHILE5
push local 0
push constant 0
lt
not
not
if-goto END_WHILE5
push constant 0
pop local 1
push constant 1000
pop local 2
label WHILE6
push local 1
push local 0
gt
not
not
if-goto END_WHILE6
push static 0
push local 1
add
pop pointer 1
push that 0
push local 2
lt
not
if-goto END_IF9
push static 0
push local 1
add
pop pointer 1
push that 0
pop local 2
push local 1
pop local 3
label END_IF9
push local 1
push constant 1
add
pop local 1
goto WHILE6
label END_WHILE6
push static 0
push local 3
add
pop pointer 1
push that 0
pop local 4
push static 0
push local 0
add
pop pointer 1
push that 0
push static 0
push local 3
add
pop pointer 1
pop that 0
push local 4
push static 0
push local 0
add
pop pointer 1
pop that 0
push static 3
push constant 10
eq
not
if-goto END_IF10
call Main.draw 0
pop temp 0
push constant 0
pop static 3
label END_IF10
push local 0
push constant 1
sub
pop local 0
push static 3
push constant 1
add
pop static 3
goto WHILE5
label END_WHILE5
call Main.draw 0
pop temp 0
push constant 0
return
function Main.mergeSort 0
push constant 0
pop static 3
call Main.draw 0
pop temp 0
push constant 0
push constant 255
call Main.mergeSort_ 2
pop temp 0
call Main.draw 0
pop temp 0
push constant 0
return
function Main.mergeSort_ 4
push argument 0
push argument 1
eq
not
if-goto END_IF11
push constant 0
return
label END_IF11
push static 3
push constant 50
gt
not
if-goto END_IF12
call Main.draw 0
pop temp 0
push constant 0
pop static 3
label END_IF12
push argument 0
push argument 1
add
push constant 2
call Math.divide 2
pop local 0
push argument 0
push local 0
call Main.mergeSort_ 2
pop temp 0
push local 0
push constant 1
add
push argument 1
call Main.mergeSort_ 2
pop temp 0
push argument 0
pop local 1
push local 0
push constant 1
add
pop local 2
push argument 0
pop local 3
label WHILE7
push local 3
push argument 1
gt
not
not
if-goto END_WHILE7
push local 1
push local 0
gt
not
if-goto ELSE13
push static 0
push local 2
add
pop pointer 1
push that 0
push static 1
push local 3
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto END_IF13
label ELSE13
push local 2
push argument 1
gt
not
if-goto ELSE14
push static 0
push local 1
add
pop pointer 1
push that 0
push static 1
push local 3
add
pop pointer 1
pop that 0
push local 1
push constant 1
add
pop local 1
goto END_IF14
label ELSE14
push static 0
push local 1
add
pop pointer 1
push that 0
push static 0
push local 2
add
pop pointer 1
push that 0
gt
not
if-goto ELSE15
push static 0
push local 1
add
pop pointer 1
push that 0
push static 1
push local 3
add
pop pointer 1
pop that 0
push local 1
push constant 1
add
pop local 1
goto END_IF15
label ELSE15
push static 0
push local 2
add
pop pointer 1
push that 0
push static 1
push local 3
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
label END_IF15
label END_IF14
label END_IF13
push local 3
push constant 1
add
pop local 3
push static 3
push constant 1
add
pop static 3
goto WHILE7
label END_WHILE7
push argument 0
pop local 1
label WHILE8
push local 1
push argument 1
gt
not
not
if-goto END_WHILE8
push static 1
push local 1
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE8
label END_WHILE8
push static 3
push constant 50
gt
not
if-goto END_IF16
call Main.draw 0
pop temp 0
push constant 0
pop static 3
label END_IF16
push constant 0
return
function Main.quickSort 0
push constant 0
pop static 3
call Main.draw 0
pop temp 0
push constant 0
push constant 255
call Main.quickSort_ 2
pop temp 0
call Main.draw 0
pop temp 0
push constant 0
return
function Main.quickSort_ 5
push argument 0
push argument 1
lt
not
not
if-goto END_IF17
push constant 0
return
label END_IF17
push static 0
push argument 0
add
pop pointer 1
push that 0
pop local 0
push argument 0
pop local 1
push argument 1
push constant 1
add
pop local 2
label WHILE9
push local 1
push local 2
lt
not
if-goto END_WHILE9
push constant 1
neg
pop local 4
label WHILE10
push local 4
push local 1
push argument 1
lt
and
not
if-goto END_WHILE10
push local 1
push constant 1
add
pop local 1
push static 0
push local 1
add
pop pointer 1
push that 0
push local 0
gt
not
not
if-goto END_IF18
push constant 0
pop local 4
label END_IF18
goto WHILE10
label END_WHILE10
push constant 1
neg
pop local 4
label WHILE11
push local 4
push local 2
push argument 0
gt
and
not
if-goto END_WHILE11
push local 2
push constant 1
sub
pop local 2
push static 0
push local 2
add
pop pointer 1
push that 0
push local 0
lt
not
not
if-goto END_IF19
push constant 0
pop local 4
label END_IF19
goto WHILE11
label END_WHILE11
push local 1
push local 2
lt
not
if-goto END_IF20
push static 0
push local 1
add
pop pointer 1
push that 0
pop local 3
push static 0
push local 2
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 3
push static 0
push local 2
add
pop pointer 1
pop that 0
label END_IF20
push static 3
push constant 15
gt
not
if-goto END_IF21
call Main.draw 0
pop temp 0
push constant 0
pop static 3
label END_IF21
push static 3
push constant 1
add
pop static 3
goto WHILE9
label END_WHILE9
push static 0
push local 2
add
pop pointer 1
push that 0
push static 0
push argument 0
add
pop pointer 1
pop that 0
push local 0
push static 0
push local 2
add
pop pointer 1
pop that 0
push argument 0
push local 2
push constant 1
sub
call Main.quickSort_ 2
pop temp 0
push local 2
push constant 1
add
push argument 1
call Main.quickSort_ 2
pop temp 0
push constant 0
return
function Main.heapSort 3
push constant 0
pop static 3
call Main.draw 0
pop temp 0
push constant 0
push constant 255
call Main.siftDown 2
pop temp 0
push constant 128
pop local 0
label WHILE12
push local 0
push constant 0
gt
not
if-goto END_WHILE12
push local 0
push constant 255
call Main.siftDown 2
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE12
label END_WHILE12
push constant 255
pop local 0
label WHILE13
push local 0
push constant 0
gt
not
if-goto END_WHILE13
push static 0
push constant 0
add
pop pointer 1
push that 0
pop local 2
push static 0
push local 0
add
pop pointer 1
push that 0
push static 0
push constant 0
add
pop pointer 1
pop that 0
push local 2
push static 0
push local 0
add
pop pointer 1
pop that 0
push local 0
push constant 1
sub
pop local 0
push constant 0
push local 0
call Main.siftDown 2
pop temp 0
goto WHILE13
label END_WHILE13
call Main.draw 0
pop temp 0
push constant 0
return
function Main.siftDown 4
push static 3
push constant 1
add
pop static 3
push static 3
push constant 35
gt
not
if-goto END_IF22
call Main.draw 0
pop temp 0
push constant 0
pop static 3
label END_IF22
push argument 0
push constant 2
call Math.multiply 2
push constant 1
add
pop local 0
push local 0
push constant 1
add
pop local 1
push local 0
push argument 1
gt
not
if-goto END_IF23
push constant 0
return
label END_IF23
push local 1
push argument 1
gt
not
if-goto END_IF24
push static 0
push argument 0
add
pop pointer 1
push that 0
push static 0
push local 0
add
pop pointer 1
push that 0
gt
not
if-goto END_IF25
push static 0
push argument 0
add
pop pointer 1
push that 0
pop local 3
push static 0
push local 0
add
pop pointer 1
push that 0
push static 0
push argument 0
add
pop pointer 1
pop that 0
push local 3
push static 0
push local 0
add
pop pointer 1
pop that 0
label END_IF25
push constant 0
return
label END_IF24
push static 0
push local 0
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
push that 0
lt
not
if-goto ELSE26
push local 0
pop local 2
goto END_IF26
label ELSE26
push local 1
pop local 2
label END_IF26
push static 0
push argument 0
add
pop pointer 1
push that 0
push static 0
push local 2
add
pop pointer 1
push that 0
gt
not
if-goto END_IF27
push static 0
push argument 0
add
pop pointer 1
push that 0
pop local 3
push static 0
push local 2
add
pop pointer 1
push that 0
push static 0
push argument 0
add
pop pointer 1
pop that 0
push local 3
push static 0
push local 2
add
pop pointer 1
pop that 0
push local 2
push argument 1
call Main.siftDown 2
pop temp 0
label END_IF27
push constant 0
return
function Main.radixSort 5
push constant 0
pop static 3
call Main.draw 0
pop temp 0
push constant 1
pop local 0
label WHILE14
push local 0
push constant 256
lt
not
if-goto END_WHILE14
push constant 0
pop local 1
push constant 0
pop local 2
push constant 256
pop local 3
label WHILE15
push local 1
push constant 256
lt
not
if-goto END_WHILE15
push static 0
push local 1
add
pop pointer 1
push that 0
push local 0
call Math.divide 2
push constant 1
and
push constant 1
eq
not
if-goto ELSE28
push static 0
push local 1
add
pop pointer 1
push that 0
push static 1
push local 2
add
pop pointer 1
pop that 0
push local 2
push constant 1
add
pop local 2
goto END_IF28
label ELSE28
push static 0
push local 1
add
pop pointer 1
push that 0
push static 1
push local 3
add
pop pointer 1
pop that 0
push local 3
push constant 1
add
pop local 3
label END_IF28
push local 1
push constant 1
add
pop local 1
goto WHILE15
label END_WHILE15
push constant 0
pop local 1
label WHILE16
push local 1
push local 2
lt
not
if-goto END_WHILE16
push static 1
push local 1
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE16
label END_WHILE16
push constant 256
pop local 4
label WHILE17
push local 4
push local 3
lt
not
if-goto END_WHILE17
push static 1
push local 4
add
pop pointer 1
push that 0
push static 0
push local 1
add
pop pointer 1
pop that 0
push local 4
push constant 1
add
pop local 4
push local 1
push constant 1
add
pop local 1
goto WHILE17
label END_WHILE17
push local 0
push local 0
add
pop local 0
call Main.draw 0
pop temp 0
goto WHILE14
label END_WHILE14
push constant 0
return
function Main.draw 3
push constant 0
pop local 0
push constant 0
pop local 1
push constant 1
pop local 2
label WHILE18
push local 0
push constant 255
lt
not
if-goto END_WHILE18
push constant 0
call Screen.setColor 1
pop temp 0
push local 1
push constant 0
push local 2
push constant 255
call Screen.drawRectangle 4
pop temp 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push local 1
push static 0
push local 0
add
pop pointer 1
push that 0
push local 2
push constant 255
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
push local 1
push constant 2
add
pop local 1
push local 2
push constant 2
add
pop local 2
goto WHILE18
label END_WHILE18
push constant 0
return
function Main.srand 0
push constant 30
call String.new 1
push constant 80
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Keyboard.readInt 1
pop static 2
call Screen.clearScreen 0
pop temp 0
push constant 0
return
function Main.rand 1
push static 2
pop local 0
push constant 17
push static 2
call Math.multiply 2
push constant 7919
add
pop static 2
push local 0
return
function Main.mod 0
push argument 0
call Math.abs 1
pop argument 0
push argument 1
call Math.abs 1
pop argument 1
push argument 0
push argument 0
push argument 1
call Math.divide 2
push argument 1
call Math.multiply 2
sub
return
