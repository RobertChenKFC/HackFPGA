function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 14336
push static 1
push constant 0
add
pop pointer 1
pop that 0
push constant 0
push static 1
push constant 1
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.peek 0
push static 0
push argument 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 1
push static 0
push argument 0
add
pop pointer 1
pop that 0
push constant 0
return
function Memory.alloc 9
push argument 0
push constant 0
lt
not
if-goto END_IF58
push constant 5
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF58
push static 1
push constant 0
eq
not
if-goto END_IF59
push constant 6
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF59
push argument 0
push constant 1
add
pop local 0
push static 1
pop local 2
push constant 0
pop local 3
push constant 14337
pop local 5
push constant 1
neg
pop local 4
label WHILE14
push local 2
push constant 0
eq
not
push local 4
and
not
if-goto END_WHILE14
push local 2
push constant 0
add
pop pointer 1
push that 0
push local 0
sub
pop local 1
push local 1
push constant 0
lt
not
push local 1
push local 5
lt
and
not
if-goto END_IF60
push local 1
pop local 5
push local 2
pop local 6
push local 3
pop local 7
push local 1
push constant 1
gt
not
not
if-goto END_IF61
push constant 0
pop local 4
label END_IF61
label END_IF60
push local 2
pop local 3
push local 2
push constant 1
add
pop pointer 1
push that 0
pop local 2
goto WHILE14
label END_WHILE14
push local 5
push constant 14337
eq
not
if-goto END_IF62
push constant 6
call Sys.error 1
pop temp 0
push constant 0
return
label END_IF62
push local 5
push constant 1
gt
not
if-goto ELSE63
push local 6
push constant 0
add
pop pointer 1
push that 0
push local 0
sub
push local 6
push constant 0
add
pop pointer 1
pop that 0
push local 6
push local 5
add
push constant 1
add
pop local 8
push local 0
push local 8
push constant 1
neg
add
pop pointer 1
pop that 0
goto END_IF63
label ELSE63
push local 7
push constant 0
eq
not
if-goto ELSE64
push local 6
push constant 1
add
pop pointer 1
push that 0
pop static 1
goto END_IF64
label ELSE64
push local 6
push constant 1
add
pop pointer 1
push that 0
push local 7
push constant 1
add
pop pointer 1
pop that 0
label END_IF64
push local 6
push constant 1
add
pop local 8
label END_IF63
push local 8
return
function Memory.deAlloc 0
push static 1
push argument 0
push constant 0
add
pop pointer 1
pop that 0
push argument 0
push constant 1
sub
pop static 1
push constant 0
return
