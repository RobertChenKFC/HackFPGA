class Main {
    static Array arr;
    static Array buf;
    static int current;
    static int cnt;

    function void main() {
        var char c;
        var bool loop;

        let arr = Array.new(256);
        let buf = Array.new(512);

        do Main.srand();

        let loop = true;
        while (loop) {
            do Main.init();
            do Main.randomize();

            let c = Keyboard.keyPressed();
            if (c = 49) {
                do Main.bubbleSort();
            }
            if (c = 50) {
                do Main.selectionSort();
            }
            if (c = 51) {
                do Main.mergeSort();
            }
            if (c = 52) {
                do Main.quickSort();
            }
            if (c = 53) {
                do Main.heapSort();
            }
            if (c = 54) {
                do Main.radixSort();
            }
            if (c = 81) {
                let loop = false;
            }
        }

        do arr.dispose();
        do buf.dispose();
        return;
    }

    function void init() {
        var int i, j;

        let i = 0;
        let j = 255;
        while (i < 255) {
            let arr[i] = j;
            let i = i + 1;
            let j = j - 1;
        }

        return;
    }

    function void randomize() {
        var int i, a, b, t;

        let i = 0;
        while (i < 1024) {
            let a = Main.mod(Main.rand(), 255);
            let b = Main.mod(Main.rand(), 255);

            let t = arr[a];
            let arr[a] = arr[b];
            let arr[b] = t;

            let i = i + 1;
        }

        return;
    }

    function void bubbleSort() {
        var int i, j, k, t;

        do Main.draw();
        let i = 255;
        let cnt = 0;
        while (~(i < 0)) {
            let j = 0;
            while (j < i) {
                let k = j + 1;
                if (arr[j] < arr[k]) {
                    let t = arr[j];
                    let arr[j] = arr[k];
                    let arr[k] = t;
                }
                if (cnt = 500) {
                    do Main.draw();
                    let cnt = 0;
                }
                let j = j + 1;
                let cnt = cnt + 1;
            }
            let i = i - 1;
        }
        do Main.draw();

        return;
    }

    function void selectionSort() {
        var int i, j, min, minj, t;

        do Main.draw();
        let i = 255;
        let cnt = 0;
        while (~(i < 0)) {
            let j = 0;
            let min = 1000;
            while (~(j > i)) {
                if (arr[j] < min) {
                    let min = arr[j];
                    let minj = j;
                }
                let j = j + 1;
            }
            let t = arr[minj];
            let arr[minj] = arr[i];
            let arr[i] = t;

            if (cnt = 10) {
                do Main.draw();
                let cnt = 0;
            }

            let i = i - 1;
            let cnt = cnt + 1;
        }
        do Main.draw();

        return;
    }

    function void mergeSort() {
        let cnt = 0;
        do Main.draw();
        do Main.mergeSort_(0, 255);
        do Main.draw();
        return;
    }

    function void mergeSort_(int begin, int end) {
        var int mid, i, j, k;

        if (begin = end) {
            return;
        }

        if (cnt > 50) {
            do Main.draw();
            let cnt = 0;
        }

        let mid = (begin + end) / 2;
        do Main.mergeSort_(begin, mid);
        do Main.mergeSort_(mid + 1, end);

        let i = begin;
        let j = mid + 1;
        let k = begin;
        while (~(k > end)) {
            if (i > mid) {
                let buf[k] = arr[j];
                let j = j + 1;
            } else {
                if (j > end) {
                    let buf[k] = arr[i];
                    let i = i + 1;
                } else {
                    if (arr[i] > arr[j]) {
                        let buf[k] = arr[i];
                        let i = i + 1;
                    } else {
                        let buf[k] = arr[j];
                        let j = j + 1;
                    }
                }
            }
            let k = k + 1;
            let cnt = cnt + 1;
        }
        let i = begin;
        while (~(i > end)) {
            let arr[i] = buf[i];
            let i = i + 1;
        }

        if (cnt > 50) {
            do Main.draw();
            let cnt = 0;
        }

        return;
    }

    function void quickSort() {
        let cnt = 0;
        do Main.draw();
        do Main.quickSort_(0, 255);
        do Main.draw();
        return;
    }

    function void quickSort_(int begin, int end) {
        var int p, i, j, t;
        var bool ok;

        if (~(begin < end)) {
            return;
        }

        let p = arr[begin];
        let i = begin;
        let j = end + 1;
        while (i < j) {
            let ok = true;
            while (ok & (i < end)) {
                let i = i + 1;
                if (~(arr[i] > p)) {
                    let ok = false;
                }
            }
            let ok = true;
            while (ok & (j > begin)) {
                let j = j - 1;
                if (~(arr[j] < p)) {
                    let ok = false;
                }
            }
            if (i < j) {
                let t = arr[i];
                let arr[i] = arr[j];
                let arr[j] = t;
            }

            if (cnt > 15) {
                do Main.draw();
                let cnt = 0;
            }

            let cnt = cnt + 1;
        }
        let arr[begin] = arr[j];
        let arr[j] = p;
        do Main.quickSort_(begin, j - 1);
        do Main.quickSort_(j + 1, end);

        return;
    }

    function void heapSort() {
        var int i, j, t;

        let cnt = 0;
        do Main.draw();

        do Main.siftDown(0, 255);
        let i = 128;
        while (i > 0) {
            do Main.siftDown(i, 255);
            let i = i - 1;
        }

        let i = 255;
        while (i > 0) {
            let t = arr[0];
            let arr[0] = arr[i];
            let arr[i] = t;
            let i = i - 1;
            do Main.siftDown(0, i);
        }

        do Main.draw();

        return;
    }

    function void siftDown(int root, int end) {
        var int left, right, min, t;

        let cnt = cnt + 1;
        if (cnt > 35) {
            do Main.draw();
            let cnt = 0;
        }

        let left = root * 2 + 1;
        let right = left + 1;
        if (left > end) {
            return;
        }
        if (right > end) {
            if (arr[root] > arr[left]) {
                let t = arr[root];
                let arr[root] = arr[left];
                let arr[left] = t;
            }
            return;
        }
        if (arr[left] < arr[right]) {
            let min = left;
        } else {
            let min = right;
        }
        if (arr[root] > arr[min]) {
            let t = arr[root];
            let arr[root] = arr[min];
            let arr[min] = t;
            do Main.siftDown(min, end);
        }
        return;
    }

    function void radixSort() {
        var int div, i, j, k, l;

        let cnt = 0;
        do Main.draw();

        let div = 1;
        while (div < 256) {
            let i = 0;
            let j = 0;
            let k = 256;
            while (i < 256) {
                if ((arr[i] / div) & 1 = 1) {
                    let buf[j] = arr[i];
                    let j = j + 1;
                } else {
                    let buf[k] = arr[i];
                    let k = k + 1;
                }
                let i = i + 1;
            }
            let i = 0;
            while (i < j) {
                let arr[i] = buf[i];
                let i = i + 1;
            }
            let l = 256;
            while (l < k) {
                let arr[i] = buf[l];
                let l = l + 1;
                let i = i + 1;
            }
            let div = div + div;
            do Main.draw();
        }

        return;
    }

    function void draw() {
        var int i, x1, x2;
        let i = 0;
        let x1 = 0;
        let x2 = 1;
        while (i < 255) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x1, 0, x2, 255);
            do Screen.setColor(true);
            do Screen.drawRectangle(x1, arr[i], x2, 255);

            let i = i + 1;
            let x1 = x1 + 2;
            let x2 = x2 + 2;
        }
        return;
    }

    function void srand() {
        let current = Keyboard.readInt("Please enter a random number: ");
        do Screen.clearScreen();
        return;
    }

    function int rand() {
        var int ret;
        let ret = current;
        let current = 17 * current + 7919;
        return ret;
    }

    function int mod(int a, int b) {
        let a = Math.abs(a);
        let b = Math.abs(b);
        return a - (a / b * b);
    }
}
