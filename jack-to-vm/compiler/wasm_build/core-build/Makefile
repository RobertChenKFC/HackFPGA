# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.25

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /snap/cmake/1210/bin/cmake

# The command to remove a file.
RM = /snap/cmake/1210/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/robert/Programming/HackFPGA/jack-to-vm/compiler

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/snap/cmake/1210/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/snap/cmake/1210/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(CMAKE_COMMAND) -E cmake_progress_start /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build/CMakeFiles /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build/core-build//CMakeFiles/progress.marks
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 core-build/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 core-build/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 core-build/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 core-build/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
core-build/CMakeFiles/core.dir/rule:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 core-build/CMakeFiles/core.dir/rule
.PHONY : core-build/CMakeFiles/core.dir/rule

# Convenience name for target.
core: core-build/CMakeFiles/core.dir/rule
.PHONY : core

# fast build rule for target.
core/fast:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/build
.PHONY : core/fast

classnode.o: classnode.cpp.o
.PHONY : classnode.o

# target to build an object file
classnode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/classnode.cpp.o
.PHONY : classnode.cpp.o

classnode.i: classnode.cpp.i
.PHONY : classnode.i

# target to preprocess a source file
classnode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/classnode.cpp.i
.PHONY : classnode.cpp.i

classnode.s: classnode.cpp.s
.PHONY : classnode.s

# target to generate assembly for a file
classnode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/classnode.cpp.s
.PHONY : classnode.cpp.s

declarationnode.o: declarationnode.cpp.o
.PHONY : declarationnode.o

# target to build an object file
declarationnode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/declarationnode.cpp.o
.PHONY : declarationnode.cpp.o

declarationnode.i: declarationnode.cpp.i
.PHONY : declarationnode.i

# target to preprocess a source file
declarationnode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/declarationnode.cpp.i
.PHONY : declarationnode.cpp.i

declarationnode.s: declarationnode.cpp.s
.PHONY : declarationnode.s

# target to generate assembly for a file
declarationnode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/declarationnode.cpp.s
.PHONY : declarationnode.cpp.s

donode.o: donode.cpp.o
.PHONY : donode.o

# target to build an object file
donode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/donode.cpp.o
.PHONY : donode.cpp.o

donode.i: donode.cpp.i
.PHONY : donode.i

# target to preprocess a source file
donode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/donode.cpp.i
.PHONY : donode.cpp.i

donode.s: donode.cpp.s
.PHONY : donode.s

# target to generate assembly for a file
donode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/donode.cpp.s
.PHONY : donode.cpp.s

expression.o: expression.cpp.o
.PHONY : expression.o

# target to build an object file
expression.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/expression.cpp.o
.PHONY : expression.cpp.o

expression.i: expression.cpp.i
.PHONY : expression.i

# target to preprocess a source file
expression.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/expression.cpp.i
.PHONY : expression.cpp.i

expression.s: expression.cpp.s
.PHONY : expression.s

# target to generate assembly for a file
expression.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/expression.cpp.s
.PHONY : expression.cpp.s

ifnode.o: ifnode.cpp.o
.PHONY : ifnode.o

# target to build an object file
ifnode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/ifnode.cpp.o
.PHONY : ifnode.cpp.o

ifnode.i: ifnode.cpp.i
.PHONY : ifnode.i

# target to preprocess a source file
ifnode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/ifnode.cpp.i
.PHONY : ifnode.cpp.i

ifnode.s: ifnode.cpp.s
.PHONY : ifnode.s

# target to generate assembly for a file
ifnode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/ifnode.cpp.s
.PHONY : ifnode.cpp.s

letnode.o: letnode.cpp.o
.PHONY : letnode.o

# target to build an object file
letnode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/letnode.cpp.o
.PHONY : letnode.cpp.o

letnode.i: letnode.cpp.i
.PHONY : letnode.i

# target to preprocess a source file
letnode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/letnode.cpp.i
.PHONY : letnode.cpp.i

letnode.s: letnode.cpp.s
.PHONY : letnode.s

# target to generate assembly for a file
letnode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/letnode.cpp.s
.PHONY : letnode.cpp.s

node.o: node.cpp.o
.PHONY : node.o

# target to build an object file
node.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/node.cpp.o
.PHONY : node.cpp.o

node.i: node.cpp.i
.PHONY : node.i

# target to preprocess a source file
node.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/node.cpp.i
.PHONY : node.cpp.i

node.s: node.cpp.s
.PHONY : node.s

# target to generate assembly for a file
node.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/node.cpp.s
.PHONY : node.cpp.s

parser.o: parser.cpp.o
.PHONY : parser.o

# target to build an object file
parser.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/parser.cpp.o
.PHONY : parser.cpp.o

parser.i: parser.cpp.i
.PHONY : parser.i

# target to preprocess a source file
parser.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/parser.cpp.i
.PHONY : parser.cpp.i

parser.s: parser.cpp.s
.PHONY : parser.s

# target to generate assembly for a file
parser.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/parser.cpp.s
.PHONY : parser.cpp.s

returnnode.o: returnnode.cpp.o
.PHONY : returnnode.o

# target to build an object file
returnnode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/returnnode.cpp.o
.PHONY : returnnode.cpp.o

returnnode.i: returnnode.cpp.i
.PHONY : returnnode.i

# target to preprocess a source file
returnnode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/returnnode.cpp.i
.PHONY : returnnode.cpp.i

returnnode.s: returnnode.cpp.s
.PHONY : returnnode.s

# target to generate assembly for a file
returnnode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/returnnode.cpp.s
.PHONY : returnnode.cpp.s

subroutinecall.o: subroutinecall.cpp.o
.PHONY : subroutinecall.o

# target to build an object file
subroutinecall.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/subroutinecall.cpp.o
.PHONY : subroutinecall.cpp.o

subroutinecall.i: subroutinecall.cpp.i
.PHONY : subroutinecall.i

# target to preprocess a source file
subroutinecall.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/subroutinecall.cpp.i
.PHONY : subroutinecall.cpp.i

subroutinecall.s: subroutinecall.cpp.s
.PHONY : subroutinecall.s

# target to generate assembly for a file
subroutinecall.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/subroutinecall.cpp.s
.PHONY : subroutinecall.cpp.s

subroutinenode.o: subroutinenode.cpp.o
.PHONY : subroutinenode.o

# target to build an object file
subroutinenode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/subroutinenode.cpp.o
.PHONY : subroutinenode.cpp.o

subroutinenode.i: subroutinenode.cpp.i
.PHONY : subroutinenode.i

# target to preprocess a source file
subroutinenode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/subroutinenode.cpp.i
.PHONY : subroutinenode.cpp.i

subroutinenode.s: subroutinenode.cpp.s
.PHONY : subroutinenode.s

# target to generate assembly for a file
subroutinenode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/subroutinenode.cpp.s
.PHONY : subroutinenode.cpp.s

term.o: term.cpp.o
.PHONY : term.o

# target to build an object file
term.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/term.cpp.o
.PHONY : term.cpp.o

term.i: term.cpp.i
.PHONY : term.i

# target to preprocess a source file
term.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/term.cpp.i
.PHONY : term.cpp.i

term.s: term.cpp.s
.PHONY : term.s

# target to generate assembly for a file
term.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/term.cpp.s
.PHONY : term.cpp.s

tokenizer.o: tokenizer.cpp.o
.PHONY : tokenizer.o

# target to build an object file
tokenizer.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/tokenizer.cpp.o
.PHONY : tokenizer.cpp.o

tokenizer.i: tokenizer.cpp.i
.PHONY : tokenizer.i

# target to preprocess a source file
tokenizer.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/tokenizer.cpp.i
.PHONY : tokenizer.cpp.i

tokenizer.s: tokenizer.cpp.s
.PHONY : tokenizer.s

# target to generate assembly for a file
tokenizer.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/tokenizer.cpp.s
.PHONY : tokenizer.cpp.s

vmcommand.o: vmcommand.cpp.o
.PHONY : vmcommand.o

# target to build an object file
vmcommand.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/vmcommand.cpp.o
.PHONY : vmcommand.cpp.o

vmcommand.i: vmcommand.cpp.i
.PHONY : vmcommand.i

# target to preprocess a source file
vmcommand.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/vmcommand.cpp.i
.PHONY : vmcommand.cpp.i

vmcommand.s: vmcommand.cpp.s
.PHONY : vmcommand.s

# target to generate assembly for a file
vmcommand.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/vmcommand.cpp.s
.PHONY : vmcommand.cpp.s

whilenode.o: whilenode.cpp.o
.PHONY : whilenode.o

# target to build an object file
whilenode.cpp.o:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/whilenode.cpp.o
.PHONY : whilenode.cpp.o

whilenode.i: whilenode.cpp.i
.PHONY : whilenode.i

# target to preprocess a source file
whilenode.cpp.i:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/whilenode.cpp.i
.PHONY : whilenode.cpp.i

whilenode.s: whilenode.cpp.s
.PHONY : whilenode.s

# target to generate assembly for a file
whilenode.cpp.s:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(MAKE) $(MAKESILENT) -f core-build/CMakeFiles/core.dir/build.make core-build/CMakeFiles/core.dir/whilenode.cpp.s
.PHONY : whilenode.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... core"
	@echo "... classnode.o"
	@echo "... classnode.i"
	@echo "... classnode.s"
	@echo "... declarationnode.o"
	@echo "... declarationnode.i"
	@echo "... declarationnode.s"
	@echo "... donode.o"
	@echo "... donode.i"
	@echo "... donode.s"
	@echo "... expression.o"
	@echo "... expression.i"
	@echo "... expression.s"
	@echo "... ifnode.o"
	@echo "... ifnode.i"
	@echo "... ifnode.s"
	@echo "... letnode.o"
	@echo "... letnode.i"
	@echo "... letnode.s"
	@echo "... node.o"
	@echo "... node.i"
	@echo "... node.s"
	@echo "... parser.o"
	@echo "... parser.i"
	@echo "... parser.s"
	@echo "... returnnode.o"
	@echo "... returnnode.i"
	@echo "... returnnode.s"
	@echo "... subroutinecall.o"
	@echo "... subroutinecall.i"
	@echo "... subroutinecall.s"
	@echo "... subroutinenode.o"
	@echo "... subroutinenode.i"
	@echo "... subroutinenode.s"
	@echo "... term.o"
	@echo "... term.i"
	@echo "... term.s"
	@echo "... tokenizer.o"
	@echo "... tokenizer.i"
	@echo "... tokenizer.s"
	@echo "... vmcommand.o"
	@echo "... vmcommand.i"
	@echo "... vmcommand.s"
	@echo "... whilenode.o"
	@echo "... whilenode.i"
	@echo "... whilenode.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/robert/Programming/HackFPGA/jack-to-vm/compiler/wasm_build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

